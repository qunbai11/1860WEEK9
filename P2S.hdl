CHIP P2S {
    IN indata[4], enable, load;
    OUT sout, complete;

    PARTS:
    // Register to store the 4-bit input data when load is asserted
    Register(in=indata, load=load, out=data_out[4]);

    // Counter to track which bit to output (only needs 2 bits for 4 states)
    Counter(increment=enable, reset=load, out=counter_value[2]);

    // Multiplexer to select which bit of the stored data to output
    Mux4Way(in=data_out[0], in=data_out[1], in=data_out[2], in=data_out[3], 
            sel=counter_value, out=sout);

    // Logic for 'complete' signal: activate after all 4 bits are transmitted
    And(a=counter_value[1..0] == 3, b=enable, out=complete);
}